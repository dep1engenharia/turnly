// source: widgets.responses.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.turnly.channels.v1.widgets.GetWidgetResponse', null, global);
goog.exportSymbol('proto.turnly.channels.v1.widgets.Widget', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.channels.v1.widgets.Widget = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.turnly.channels.v1.widgets.Widget.repeatedFields_, null);
};
goog.inherits(proto.turnly.channels.v1.widgets.Widget, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.channels.v1.widgets.Widget.displayName = 'proto.turnly.channels.v1.widgets.Widget';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.channels.v1.widgets.GetWidgetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.channels.v1.widgets.GetWidgetResponse.displayName = 'proto.turnly.channels.v1.widgets.GetWidgetResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.turnly.channels.v1.widgets.Widget.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.channels.v1.widgets.Widget.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.channels.v1.widgets.Widget} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.channels.v1.widgets.Widget.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    originsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    position: jspb.Message.getFieldWithDefault(msg, 5, ""),
    openByDefault: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    showFullscreen: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    showCloseButton: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    organizationId: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.channels.v1.widgets.Widget}
 */
proto.turnly.channels.v1.widgets.Widget.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.channels.v1.widgets.Widget;
  return proto.turnly.channels.v1.widgets.Widget.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.channels.v1.widgets.Widget} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.channels.v1.widgets.Widget}
 */
proto.turnly.channels.v1.widgets.Widget.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOrigins(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosition(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpenByDefault(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowFullscreen(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setShowCloseButton(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.channels.v1.widgets.Widget.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.channels.v1.widgets.Widget} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.channels.v1.widgets.Widget.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOriginsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getPosition();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOpenByDefault();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getShowFullscreen();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getShowCloseButton();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string device_id = 3;
 * @return {string}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string origins = 4;
 * @return {!Array<string>}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getOriginsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setOriginsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.addOrigins = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.clearOriginsList = function() {
  return this.setOriginsList([]);
};


/**
 * optional string position = 5;
 * @return {string}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setPosition = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool open_by_default = 6;
 * @return {boolean}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getOpenByDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setOpenByDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool show_fullscreen = 7;
 * @return {boolean}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getShowFullscreen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setShowFullscreen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool show_close_button = 8;
 * @return {boolean}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getShowCloseButton = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setShowCloseButton = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string organization_id = 9;
 * @return {string}
 */
proto.turnly.channels.v1.widgets.Widget.prototype.getOrganizationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.channels.v1.widgets.Widget} returns this
 */
proto.turnly.channels.v1.widgets.Widget.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.channels.v1.widgets.GetWidgetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.channels.v1.widgets.GetWidgetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.turnly.channels.v1.widgets.Widget.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && common_pb.Meta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.channels.v1.widgets.GetWidgetResponse;
  return proto.turnly.channels.v1.widgets.GetWidgetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.channels.v1.widgets.GetWidgetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.turnly.channels.v1.widgets.Widget;
      reader.readMessage(value,proto.turnly.channels.v1.widgets.Widget.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_pb.Meta;
      reader.readMessage(value,common_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.channels.v1.widgets.GetWidgetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.channels.v1.widgets.GetWidgetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.turnly.channels.v1.widgets.Widget.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Meta.serializeBinaryToWriter
    );
  }
};


/**
 * optional Widget data = 1;
 * @return {?proto.turnly.channels.v1.widgets.Widget}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.getData = function() {
  return /** @type{?proto.turnly.channels.v1.widgets.Widget} */ (
    jspb.Message.getWrapperField(this, proto.turnly.channels.v1.widgets.Widget, 1));
};


/**
 * @param {?proto.turnly.channels.v1.widgets.Widget|undefined} value
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse} returns this
*/
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse} returns this
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional turnly.common.v1.Meta meta = 2;
 * @return {?proto.turnly.common.v1.Meta}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.getMeta = function() {
  return /** @type{?proto.turnly.common.v1.Meta} */ (
    jspb.Message.getWrapperField(this, common_pb.Meta, 2));
};


/**
 * @param {?proto.turnly.common.v1.Meta|undefined} value
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse} returns this
*/
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.channels.v1.widgets.GetWidgetResponse} returns this
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.channels.v1.widgets.GetWidgetResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.turnly.channels.v1.widgets);
