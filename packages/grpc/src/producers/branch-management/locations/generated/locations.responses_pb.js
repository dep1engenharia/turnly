// source: locations.responses.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse', null, global);
goog.exportSymbol('proto.turnly.branch_management.v1.locations.GetLocationResponse', null, global);
goog.exportSymbol('proto.turnly.branch_management.v1.locations.Location', null, global);
goog.exportSymbol('proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.branch_management.v1.locations.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.branch_management.v1.locations.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.branch_management.v1.locations.Location.displayName = 'proto.turnly.branch_management.v1.locations.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.repeatedFields_, null);
};
goog.inherits(proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.displayName = 'proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.branch_management.v1.locations.GetLocationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.branch_management.v1.locations.GetLocationResponse.displayName = 'proto.turnly.branch_management.v1.locations.GetLocationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.displayName = 'proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.branch_management.v1.locations.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.branch_management.v1.locations.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    country: jspb.Message.getFieldWithDefault(msg, 4, ""),
    latitude: jspb.Message.getFieldWithDefault(msg, 5, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 6, ""),
    stopServingBeforeInMinutes: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timezone: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.branch_management.v1.locations.Location}
 */
proto.turnly.branch_management.v1.locations.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.branch_management.v1.locations.Location;
  return proto.turnly.branch_management.v1.locations.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.branch_management.v1.locations.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.branch_management.v1.locations.Location}
 */
proto.turnly.branch_management.v1.locations.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatitude(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStopServingBeforeInMinutes(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.branch_management.v1.locations.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.branch_management.v1.locations.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLatitude();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStopServingBeforeInMinutes();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country = 4;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string latitude = 5;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getLatitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string longitude = 6;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 stop_serving_before_in_minutes = 7;
 * @return {number}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getStopServingBeforeInMinutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setStopServingBeforeInMinutes = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string timezone = 8;
 * @return {string}
 */
proto.turnly.branch_management.v1.locations.Location.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.branch_management.v1.locations.Location} returns this
 */
proto.turnly.branch_management.v1.locations.Location.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.turnly.branch_management.v1.locations.Location.toObject, includeInstance),
    meta: (f = msg.getMeta()) && common_pb.Meta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse;
  return proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.turnly.branch_management.v1.locations.Location;
      reader.readMessage(value,proto.turnly.branch_management.v1.locations.Location.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new common_pb.Meta;
      reader.readMessage(value,common_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.turnly.branch_management.v1.locations.Location.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Meta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Location data = 1;
 * @return {!Array<!proto.turnly.branch_management.v1.locations.Location>}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.turnly.branch_management.v1.locations.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.turnly.branch_management.v1.locations.Location, 1));
};


/**
 * @param {!Array<!proto.turnly.branch_management.v1.locations.Location>} value
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} returns this
*/
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.turnly.branch_management.v1.locations.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.turnly.branch_management.v1.locations.Location}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.turnly.branch_management.v1.locations.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} returns this
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional turnly.common.v1.Meta meta = 2;
 * @return {?proto.turnly.common.v1.Meta}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.getMeta = function() {
  return /** @type{?proto.turnly.common.v1.Meta} */ (
    jspb.Message.getWrapperField(this, common_pb.Meta, 2));
};


/**
 * @param {?proto.turnly.common.v1.Meta|undefined} value
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} returns this
*/
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse} returns this
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.branch_management.v1.locations.SearchAvailableLocationsForServingResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.branch_management.v1.locations.GetLocationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.turnly.branch_management.v1.locations.Location.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && common_pb.Meta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.branch_management.v1.locations.GetLocationResponse;
  return proto.turnly.branch_management.v1.locations.GetLocationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.turnly.branch_management.v1.locations.Location;
      reader.readMessage(value,proto.turnly.branch_management.v1.locations.Location.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_pb.Meta;
      reader.readMessage(value,common_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.branch_management.v1.locations.GetLocationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.turnly.branch_management.v1.locations.Location.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Meta.serializeBinaryToWriter
    );
  }
};


/**
 * optional Location data = 1;
 * @return {?proto.turnly.branch_management.v1.locations.Location}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.getData = function() {
  return /** @type{?proto.turnly.branch_management.v1.locations.Location} */ (
    jspb.Message.getWrapperField(this, proto.turnly.branch_management.v1.locations.Location, 1));
};


/**
 * @param {?proto.turnly.branch_management.v1.locations.Location|undefined} value
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse} returns this
*/
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse} returns this
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional turnly.common.v1.Meta meta = 2;
 * @return {?proto.turnly.common.v1.Meta}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.getMeta = function() {
  return /** @type{?proto.turnly.common.v1.Meta} */ (
    jspb.Message.getWrapperField(this, common_pb.Meta, 2));
};


/**
 * @param {?proto.turnly.common.v1.Meta|undefined} value
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse} returns this
*/
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationResponse} returns this
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.branch_management.v1.locations.GetLocationResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && proto.turnly.branch_management.v1.locations.Location.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && common_pb.Meta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse;
  return proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.turnly.branch_management.v1.locations.Location;
      reader.readMessage(value,proto.turnly.branch_management.v1.locations.Location.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new common_pb.Meta;
      reader.readMessage(value,common_pb.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.turnly.branch_management.v1.locations.Location.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Meta.serializeBinaryToWriter
    );
  }
};


/**
 * optional Location data = 1;
 * @return {?proto.turnly.branch_management.v1.locations.Location}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.getData = function() {
  return /** @type{?proto.turnly.branch_management.v1.locations.Location} */ (
    jspb.Message.getWrapperField(this, proto.turnly.branch_management.v1.locations.Location, 1));
};


/**
 * @param {?proto.turnly.branch_management.v1.locations.Location|undefined} value
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} returns this
*/
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} returns this
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional turnly.common.v1.Meta meta = 2;
 * @return {?proto.turnly.common.v1.Meta}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.getMeta = function() {
  return /** @type{?proto.turnly.common.v1.Meta} */ (
    jspb.Message.getWrapperField(this, common_pb.Meta, 2));
};


/**
 * @param {?proto.turnly.common.v1.Meta|undefined} value
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} returns this
*/
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse} returns this
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.turnly.branch_management.v1.locations.GetLocationReadyForServingResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.turnly.branch_management.v1.locations);
