// source: features.requests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.turnly.tenancy.v1.features.BulkFeaturesObject', null, global);
goog.exportSymbol('proto.turnly.tenancy.v1.features.BulkFeaturesRequest', null, global);
goog.exportSymbol('proto.turnly.tenancy.v1.features.DeleteFeatureRequest', null, global);
goog.exportSymbol('proto.turnly.tenancy.v1.features.ListFeaturesRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.turnly.tenancy.v1.features.BulkFeaturesObject.repeatedFields_, null);
};
goog.inherits(proto.turnly.tenancy.v1.features.BulkFeaturesObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.tenancy.v1.features.BulkFeaturesObject.displayName = 'proto.turnly.tenancy.v1.features.BulkFeaturesObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.turnly.tenancy.v1.features.BulkFeaturesRequest.repeatedFields_, null);
};
goog.inherits(proto.turnly.tenancy.v1.features.BulkFeaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.tenancy.v1.features.BulkFeaturesRequest.displayName = 'proto.turnly.tenancy.v1.features.BulkFeaturesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.tenancy.v1.features.DeleteFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.tenancy.v1.features.DeleteFeatureRequest.displayName = 'proto.turnly.tenancy.v1.features.DeleteFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.turnly.tenancy.v1.features.ListFeaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.turnly.tenancy.v1.features.ListFeaturesRequest.displayName = 'proto.turnly.tenancy.v1.features.ListFeaturesRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.tenancy.v1.features.BulkFeaturesObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unit: jspb.Message.getFieldWithDefault(msg, 3, ""),
    key: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    metadataList: jspb.Message.toObjectList(msg.getMetadataList(),
    common_pb.Extra.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.tenancy.v1.features.BulkFeaturesObject;
  return proto.turnly.tenancy.v1.features.BulkFeaturesObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setQuantity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = new common_pb.Extra;
      reader.readMessage(value,common_pb.Extra.deserializeBinaryFromReader);
      msg.addMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.tenancy.v1.features.BulkFeaturesObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUnit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_pb.Extra.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 quantity = 2;
 * @return {number}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string unit = 3;
 * @return {string}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string key = 4;
 * @return {string}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated turnly.common.v1.Extra metadata = 6;
 * @return {!Array<!proto.turnly.common.v1.Extra>}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.getMetadataList = function() {
  return /** @type{!Array<!proto.turnly.common.v1.Extra>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Extra, 6));
};


/**
 * @param {!Array<!proto.turnly.common.v1.Extra>} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
*/
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.setMetadataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.turnly.common.v1.Extra=} opt_value
 * @param {number=} opt_index
 * @return {!proto.turnly.common.v1.Extra}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.addMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.turnly.common.v1.Extra, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesObject.prototype.clearMetadataList = function() {
  return this.setMetadataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.tenancy.v1.features.BulkFeaturesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.turnly.tenancy.v1.features.BulkFeaturesObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.tenancy.v1.features.BulkFeaturesRequest;
  return proto.turnly.tenancy.v1.features.BulkFeaturesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.turnly.tenancy.v1.features.BulkFeaturesObject;
      reader.readMessage(value,proto.turnly.tenancy.v1.features.BulkFeaturesObject.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.tenancy.v1.features.BulkFeaturesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.turnly.tenancy.v1.features.BulkFeaturesObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BulkFeaturesObject features = 1;
 * @return {!Array<!proto.turnly.tenancy.v1.features.BulkFeaturesObject>}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.turnly.tenancy.v1.features.BulkFeaturesObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.turnly.tenancy.v1.features.BulkFeaturesObject, 1));
};


/**
 * @param {!Array<!proto.turnly.tenancy.v1.features.BulkFeaturesObject>} value
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest} returns this
*/
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.turnly.tenancy.v1.features.BulkFeaturesObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesObject}
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.turnly.tenancy.v1.features.BulkFeaturesObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.turnly.tenancy.v1.features.BulkFeaturesRequest} returns this
 */
proto.turnly.tenancy.v1.features.BulkFeaturesRequest.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.tenancy.v1.features.DeleteFeatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest}
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.tenancy.v1.features.DeleteFeatureRequest;
  return proto.turnly.tenancy.v1.features.DeleteFeatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest}
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.tenancy.v1.features.DeleteFeatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.turnly.tenancy.v1.features.DeleteFeatureRequest} returns this
 */
proto.turnly.tenancy.v1.features.DeleteFeatureRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.turnly.tenancy.v1.features.ListFeaturesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.turnly.tenancy.v1.features.ListFeaturesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.turnly.tenancy.v1.features.ListFeaturesRequest}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.turnly.tenancy.v1.features.ListFeaturesRequest;
  return proto.turnly.tenancy.v1.features.ListFeaturesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.turnly.tenancy.v1.features.ListFeaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.turnly.tenancy.v1.features.ListFeaturesRequest}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.turnly.tenancy.v1.features.ListFeaturesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.turnly.tenancy.v1.features.ListFeaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.turnly.tenancy.v1.features.ListFeaturesRequest} returns this
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 offset = 2;
 * @return {number}
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.turnly.tenancy.v1.features.ListFeaturesRequest} returns this
 */
proto.turnly.tenancy.v1.features.ListFeaturesRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.turnly.tenancy.v1.features);
