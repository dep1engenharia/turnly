version: '3.9'

services:
  iam:
    extends:
      file: common.yml
      service: common
    container_name: iam
    image: turnly/iam:latest
    build:
      context: ${DOCKER_RELATIVE_APPS_DIR}/iam
      dockerfile: Dockerfile
    depends_on:
      postgres: # Disable this if you are using an external Postgres database
        condition: service_healthy
    networks:
      turnly.network.public:
      turnly.network.internal:
        aliases:
          - iam.turnly.local
    environment:
      # This service shared env variables that extend from common.yml
      APP_NAME: iam

      # Credentials for storing into an external database (postgres)
      KC_DB: postgres
      KC_DB_URL_HOST: ${IAM_DB_HOST}
      KC_DB_URL_PORT: ${IAM_DB_PORT}
      KC_DB_URL_DATABASE: ${IAM_DB_DATABASE}
      KC_DB_SCHEMA: ${IAM_DB_SCHEMA}
      KC_DB_USERNAME: ${IAM_DB_USERNAME}
      KC_DB_PASSWORD: ${IAM_DB_PASSWORD}
      # Proxy settings
      KC_HOSTNAME: ${IAM_HOSTNAME}
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      # Credentials for admin account
      KEYCLOAK_ADMIN: ${IAM_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${IAM_ADMIN_PASSWORD}
    command: start-dev
    healthcheck:
      test: curl --fail http://iam.turnly.local:8080/realms/master
      interval: 20s
      timeout: 60s
      retries: 15
    labels:
      - traefik.enable=true
      - traefik.docker.network=turnly.network.internal
      - traefik.http.routers.iam-public.entrypoints=web,websecure
      - traefik.http.routers.iam-public.service=iam-public
      - traefik.http.services.iam-public.loadbalancer.server.port=8080
      - traefik.http.routers.iam-public.rule=Host(`${IAM_HOSTNAME}`) && PathPrefix(`/admin`, `/js`, `/realms`, `/resources`, `/robots.txt`)
