version: '3.9'

services:
  iam:
    extends:
      file: common.yml
      service: common
    container_name: iam
    image: turnly/iam:latest
    command: start-dev
    restart: unless-stopped
    build:
      context: ${DOCKER_RELATIVE_APPS_DIR}/iam
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - gateway
    environment:
      # Credentials for storing into an external database (postgres)
      KC_DB: postgres
      KC_DB_URL_HOST: ${IAM_DB_HOST}
      KC_DB_URL_PORT: ${IAM_DB_PORT}
      KC_DB_URL_DATABASE: ${IAM_DB_DATABASE}
      KC_DB_SCHEMA: ${IAM_DB_SCHEMA}
      KC_DB_USERNAME: ${IAM_DB_USERNAME}
      KC_DB_PASSWORD: ${IAM_DB_PASSWORD}
      # Proxy settings
      KC_HOSTNAME: ${IAM_HOSTNAME}
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      # Credentials for admin account
      KEYCLOAK_ADMIN: ${IAM_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${IAM_ADMIN_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.iam.entrypoints=web,websecure
      - traefik.http.routers.iam.service=iam
      - traefik.http.services.iam.loadbalancer.server.port=8080
      # For production: Use the following label to expose only the necessary endpoints to the internet.
      # - traefik.http.routers.iam.rule=Host(`${IAM_HOSTNAME}`) && PathPrefix(`/js`, `/realms`, `/resources`, `/robots.txt`)

      # For development: Use the following label to expose all endpoints to the internet. (admin, metrics, etc)
      - traefik.http.routers.iam.rule=Host(`${IAM_HOSTNAME}`)
